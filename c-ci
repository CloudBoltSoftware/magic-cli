#!/usr/bin/env python
# Continuous Integration (and Testing) commands.
# @param help - Command to run, e.g. 'c ci help'.
import re

import click
import jenkins


@click.group()
def cli():
    pass


def announce(message):
    click.echo(message)


@cli.command()
@click.option('--branch-name', default='master',
              help='Branch name to switch BranchCIT to test. (default: master)')
@click.option('--jenkins-channel', default='#dev',
              help='Channel to have Jenkins post to. (default: #dev)')
@click.option('--cit-back-to-normal-channel', default='#dev',
              help='Channel to have CIT post to when tests return to normal. (default: #dev')
@click.option('--cit-failure-channel', default='#dev',
              help='Channel to have CIT post to when tests fail. (default: #dev)')
@click.option('--cit-noisy-channel', default='#dev-jenkins',
              help='Channel to have CIT post to every time. (default: #dev-jenkins)')
@click.option('--announce-channel', default='#dev',
              help='Channel to announce the branch/channel change in. (default: #dev)')
@click.option('--jenkins-test-name', default='Branch_Tests',
              help='Name of the Jenkins Job to configure channel and branch for. (default: Branch_Tests)')
@click.option('--jenkins-hostname', envvar='JENKINS_HOSTNAME')
@click.option('--jenkins-username', envvar='JENKINS_USERNAME')
@click.option('--jenkins-password', envvar='JENKINS_PASSWORD')
@click.option('--cit-hostname', envvar='BRANCHCIT_HOSTNAME')
@click.option('--cit-username', envvar='BRANCHCIT_USERNAME')
@click.option('--cit-password', envvar='BRANCHCIT_PASSWORD')
@click.option('--slack-account', envvar='SLACK_ACCOUNT')
@click.option('--slack-username', envvar='SLACK_USERNAME')
@click.option('--slack-token', envvar='SLACK_TOKEN')
def branch(branch_name, announce_channel, jenkins_channel,
           cit_back_to_normal_channel, cit_failure_channel, cit_noisy_channel,
           jenkins_hostname, jenkins_username, jenkins_password, jenkins_test_name,
           cit_hostname, cit_username, cit_password):
    """Switch BranchCIT's branch and channels.
    
    ./c-ci branch --branch-name=acropolis --jenkins-channel=#acropolis
    """
    jenkins_uri = 'https://{}/job/{}/config.xml'.format(jenkins_hostname, jenkins_test_name)
    if jenkins_test_name and (branch_name or jenkins_channel):
        server = jenkins.Jenkins('https://{}'.format(jenkins_hostname), username=jenkins_username, password=jenkins_password)
        config = server.get_job_config(jenkins_test_name)
        config = re.sub('<room>.+</room>', '<room>{}</room>'.format(jenkins_channel), config)
        config = re.sub('<name>.+</name>', '<name>{}</name>'.format(branch_name), config)
        server.reconfig_job(jenkins_test_name, config)
        if branch_name:
            announce('Reconfigured branch for "{}" on Jenkins to: {}'.format(jenkins_test_name, branch_name))
        if jenkins_channel:
            announce('Reconfigured channel for "{}" on Jenkins to: {}'.format(jenkins_test_name, branch_name))

if __name__ == '__main__':
    cli()
